# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # jdk 17 세팅
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    # 패키징
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # 도커 로그인
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 도커 이미지 빌드
    - name: Build the Docker image
      run: docker build -t damho/front .

    # 도커 이미지 푸시
    - name: push Docker image
      run: docker push damho/front
      
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 현재 GitHub Actions 워커의 IP 가져오기 및 보안 그룹에 추가
      - name: Add GitHub Actions Runner IP to Security Group
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_IAM_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_IAM_SECRET_KEY }}
        run: |
          MY_IP=$(curl -s https://checkip.amazonaws.com)
          echo "Current Runner IP is ${MY_IP}"
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ secrets.AWS_SECURITY_GROUP_ID }} \
            --protocol tcp \
            --port ${{ secrets.SSH_PORT }} \
            --cidr ${MY_IP}/32

      # SSH를 통해 EC2에 접근하여 배포 수행
      - name: SSH to EC2 and Deploy Docker Image
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.SSH_PORT}}
          script_stop: true
          script: |
            sudo docker pull damho/front:latest
            
            # 기존 컨테이너 중지 및 제거
            sudo docker stop front || true
            sudo docker rm front || true
            
            # 새 컨테이너 실행
            sudo docker run --env-file .env -d -p 80:8080 --name front damho/front:latest

      # 작업 완료 후 보안 그룹에서 GitHub Actions 워커의 IP 제거
      - name: Remove GitHub Actions Runner IP from Security Group
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_IAM_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_IAM_SECRET_KEY }}
        run: |
          MY_IP=$(curl -s https://checkip.amazonaws.com)
          echo "Removing Runner IP ${MY_IP} from Security Group"
          aws ec2 revoke-security-group-ingress \
            --group-id ${{ secrets.AWS_SECURITY_GROUP_ID }} \
            --protocol tcp \
            --port ${{ secrets.SSH_PORT }} \
            --cidr ${MY_IP}/32
    
